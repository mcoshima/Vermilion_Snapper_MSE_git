#V3.24AC
#C generic forecast file
# for all year entries except rebuilder; enter either: actual year, -999 for styr, 0 for endyr, neg number for rel. endyr
1 # Benchmarks: 0=skip; 1=calc F_spr,F_btgt,F_msy 
2 # MSY: 1= set to F(SPR); 2=calc F(MSY); 3=set to F(Btgt); 4=set to F(endyr) 
0.32 # SPR target (e.g. 0.40)
0.3 # Biomass target (e.g. 0.40)
#_Bmark_years: beg_bio, end_bio, beg_selex, end_selex, beg_relF, end_relF (enter actual year, or values of 0 or -integer to be rel. endyr)
 -1 -1 -1 -1 2012 2014
#  2013 2013 2013 2013 2012 2014 # after processing 
1 #Bmark_relF_Basis: 1 = use year range; 2 = set relF same as forecast below
#
1 # Forecast: 0=none; 1=F(SPR); 2=F(MSY) 3=F(Btgt); 4=Ave F (uses first-last relF yrs); 5=input annual F scalar
60 # N forecast years 
0.2 # F scalar (only used for Do_Forecast==5)
#_Fcast_years:  beg_selex, end_selex, beg_relF, end_relF  (enter actual year, or values of 0 or -integer to be rel. endyr)
 -1 -1 2012 2014
#  2013 2013 2012 2014 # after processing 
2 # Control rule method (1=catch=f(SSB) west coast; 2=F=f(SSB) ) 
0.01 # Control rule Biomass level for constant F (as frac of Bzero, e.g. 0.40); (Must be > the no F level below) 
0.001 # Control rule Biomass level for no F (as frac of Bzero, e.g. 0.10) 
0.75 # Control rule target as fraction of Flimit (e.g. 0.75) 
2 #_N forecast loops (1=OFL only; 2=ABC; 3=get F from forecast ABC catch with allocations applied)
3 #_First forecast loop with stochastic recruitment
0 #_Forecast loop control #3 (reserved for future bells&whistles) 
0 #_Forecast loop control #4 (reserved for future bells&whistles) 
0 #_Forecast loop control #5 (reserved for future bells&whistles) 
2074  #FirstYear for caps and allocations (should be after years with fixed inputs) 
0 # stddev of log(realized catch/target catch) in forecast (set value>0.0 to cause active impl_error)
0 # Do West Coast gfish rebuilder output (0/1) 
2011 # Rebuilder:  first year catch could have been set to zero (Ydecl)(-1 to set to 1999)
2015 # Rebuilder:  year for current age structure (Yinit) (-1 to set to endyear+1)
1 # fleet relative F:  1=use first-last alloc year; 2=read seas(row) x fleet(col) below
# Note that fleet allocation is used directly as average F if Do_Forecast=4 
3 # basis for fcast catch tuning and for fcast catch caps and allocation  (2=deadbio; 3=retainbio; 5=deadnum; 6=retainnum)
# Conditional input if relative F choice = 2
# Fleet relative F:  rows are seasons, columns are fleets
#_Fleet:  CM_E CM_W REC SMP_BYC
#  0.2571 0.227214 0.272974 0.242711
# max totalcatch by fleet (-1 to have no max) must enter value for each fleet
 -1 -1 -1 -1
# max totalcatch by area (-1 to have no max); must enter value for each fleet 
 -1
# fleet assignment to allocation group (enter group ID# for each fleet, 0 for not included in an alloc group)
 0 0 0 0
#_Conditional on >1 allocation group
# allocation fraction for each of: 0 allocation groups
# no allocation groups
66 # Number of forecast catch levels to input (else calc catch from forecast F) 
-1 # code means to read fleet/time specific basis (2=dead catch; 3=retained catch; 99=F)  as below (units are from fleetunits; note new codes in SSV3.20)
# Input fixed catch values
#Year Seas Fleet Catch(or_F) Basis
 2015 1 1 0.0549255 99
 2015 1 2 0.0500571 99
 2015 1 3 0.0496954 99
 2015 1 4 0.0735613 99
 2016 1 1 0.0597191 99
 2016 1 2 0.0544258 99
 2016 1 3 0.0540325 99
 2016 1 4 0.0735613 99
 2017 1 4 0.0735613 99
 2018 1 4 0.0735613 99
 2019 1 4 0.0735613 99
 2020 1 4 0.0735613 99
 2021 1 4 0.0735613 99
 2022 1 4 0.0735613 99
 2023 1 4 0.0735613 99
 2024 1 4 0.0735613 99
 2025 1 4 0.0735613 99
 2026 1 4 0.0735613 99
 2027 1 4 0.0735613 99
 2028 1 4 0.0735613 99
 2029 1 4 0.0735613 99
 2030 1 4 0.0735613 99
 2031 1 4 0.0735613 99
 2032 1 4 0.0735613 99
 2033 1 4 0.0735613 99
 2034 1 4 0.0735613 99
 2035 1 4 0.0735613 99
 2036 1 4 0.0735613 99
 2037 1 4 0.0735613 99
 2038 1 4 0.0735613 99
 2039 1 4 0.0735613 99
 2040 1 4 0.0735613 99
 2041 1 4 0.0735613 99
 2042 1 4 0.0735613 99
 2043 1 4 0.0735613 99
 2044 1 4 0.0735613 99
 2045 1 4 0.0735613 99
 2046 1 4 0.0735613 99
 2047 1 4 0.0735613 99
 2048 1 4 0.0735613 99
 2049 1 4 0.0735613 99
 2050 1 4 0.0735613 99
 2051 1 4 0.0735613 99
 2052 1 4 0.0735613 99
 2053 1 4 0.0735613 99
 2054 1 4 0.0735613 99
 2055 1 4 0.0735613 99
 2056 1 4 0.0735613 99
 2057 1 4 0.0735613 99
 2058 1 4 0.0735613 99
 2059 1 4 0.0735613 99
 2060 1 4 0.0735613 99
 2061 1 4 0.0735613 99
 2062 1 4 0.0735613 99
 2063 1 4 0.0735613 99
 2064 1 4 0.0735613 99
 2065 1 4 0.0735613 99
 2066 1 4 0.0735613 99
 2067 1 4 0.0735613 99
 2068 1 4 0.0735613 99
 2069 1 4 0.0735613 99
 2070 1 4 0.0735613 99
 2071 1 4 0.0735613 99
 2072 1 4 0.0735613 99
 2073 1 4 0.0735613 99
 2074 1 4 0.0735613 99
#
999 # verify end of input 
